package br.com.luger.dev.precad.service;


import br.com.luger.dev.precad.dto.DocumentsDto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.*;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.Map;
import java.util.UUID;

@Component
public class DocumentsServiceAPI {

    @Value("${API.Documents}")
    private String baseUrl;
    private final RestTemplate restTemplate;

    private final HttpHeaders headers = new HttpHeaders();
    @Autowired
    public DocumentsServiceAPI(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }




    public ResponseEntity<String> updateStatusDocument(UUID id, String type ,String status) {
        String url = baseUrl+"/api/documents/update/status?id={"+id+"}&status={"+status+"}&type={"+type+"}";

        // Faz a chamada POST
        ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.PUT, null, String.class, id, status);

        return response;
    }

    public ResponseEntity<String> updateDocument(UUID id, DocumentsDto dto) {
        String url = baseUrl+"/api/documents/update?id={"+id+"}";

        // Faz a chamada PUT
        ResponseEntity<String> response = restTemplate.exchange(
                url,
                HttpMethod.PUT,
                new HttpEntity<>(dto),
                String.class,
                id
        );

        return response;
    }

    public ResponseEntity<String> deleteByCadastroCursoIdDocument(UUID idCadastroCurso) {
        String url = baseUrl+"/api/documents/deleteByCadastroCursoId/"+idCadastroCurso;

        // Faz a chamada DELETE
        ResponseEntity<String> response = restTemplate.exchange(
                url,
                HttpMethod.DELETE,
                null,
                String.class,
                idCadastroCurso
        );

        return response;
    }

    public ResponseEntity<String> postDocument(DocumentsDto dto) {
        String url = baseUrl+"/api/documents/add";

        // Faz a chamada POST
        ResponseEntity<String> response = restTemplate.postForEntity(
                url,
                dto,
                String.class
        );

        return response;
    }

    public ResponseEntity<List<Map<String, Object>>> getListDocuments() {
        String url = baseUrl+"/api/documents/all";

        // Faz a chamada GET
        ResponseEntity<List<Map<String, Object>>> response = restTemplate.exchange(
                url,
                HttpMethod.GET,
                null,
                new ParameterizedTypeReference<List<Map<String, Object>>>() {}
        );

        return response;

    }

    public ResponseEntity<String> deleteDocument(UUID id, String type) {
        String url = baseUrl+"/api/documents/delete?id="+id+"&type="+type;

        // Faz a chamada POST
        ResponseEntity<String> response = restTemplate.exchange(
                url,
                HttpMethod.DELETE,
                null,
                String.class,
                id,
                type
        );

        return response;
    }
}


